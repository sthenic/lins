stages:
  - build
  - deploy


.build_template: &ubuntu_template
  stage: build
  script:
  - VERSION=$(cat VERSION)
  - apt update
  - apt install -y curl build-essential git
  - curl https://nim-lang.org/choosenim/init.sh -sSf > init.sh
  - sh init.sh -y
  - export PATH=$HOME/.nimble/bin:$PATH
  - nimble refresh -y
  - nimble install yaml -y
  - nim build
  - cd build
  - chmod -R 755 deb/DEBIAN
  - sh build_deb.sh "ubuntu-${UBUNTU_RELEASE}-x86_64"
  - cp *.deb ../
  - cd ..
  - tar -czf "lins-${VERSION}-ubuntu-${UBUNTU_RELEASE}-x86_64.tar.gz" lins LICENSE THIRD_PARTY_LICENSES.md
  - md5sum "lins-${VERSION}-ubuntu-${UBUNTU_RELEASE}-x86_64.tar.gz" > lins-${VERSION}-ubuntu-${UBUNTU_RELEASE}-x86_64.tar.gz.md5
  - md5sum "lins-${VERSION}-ubuntu-${UBUNTU_RELEASE}-x86_64.deb" > lins-${VERSION}-ubuntu-${UBUNTU_RELEASE}-x86_64.deb.md5
  - echo ${VERSION}
  artifacts:
    paths:
    - "*.tar.gz"
    - "*.deb"
    - "*.md5"
    name: "lins-$(cat VERSION)-build-ubuntu-${UBUNTU_RELEASE}-x86_64"
  only:
  - tags


# Build
pages:
  stage: build
  image: alpine
  script:
  - cd doc/web
  - apk --no-cache add py3-pip python3-dev
  - pip3 install sphinx
  - apk --no-cache add make
  - make html
  - cd ../..
  - mv doc/web/_build/html/ public/
  artifacts:
    paths:
    - public
  only:
  - latest


build:ubuntu-18.04-x86_64:
  <<: *ubuntu_template
  image: ubuntu:18.04
  variables:
    UBUNTU_RELEASE: "18.04"


build:ubuntu-16.04-x86_64:
  <<: *ubuntu_template
  image: ubuntu:16.04
  variables:
    UBUNTU_RELEASE: "16.04"


build:win-x86_64:
  stage: build
  image: ubuntu:18.04
  script:
  - apt update
  - apt install -y curl build-essential git
  - curl https://nim-lang.org/choosenim/init.sh -sSf > init.sh
  - sh init.sh -y
  - export PATH=$HOME/.nimble/bin:$PATH
  - VERSION=$(cat VERSION)
  - apt install -y mingw-w64 zip
  - nimble refresh -y
  - nimble install yaml -y
  - nim buildxwin64
  - zip "lins-${VERSION}-win-x86_64.zip" lins.exe LICENSE THIRD_PARTY_LICENSES.md
  - md5sum "lins-${VERSION}-win-x86_64.zip" > lins-${VERSION}-win-x86_64.zip.md5
  artifacts:
    paths:
    - "*.zip"
    - "*.md5"
    name: "lins-$(cat VERSION)-build-win-x86_64"
  only:
  - tags


# Deploy
deploy:
  stage: deploy
  script:
  - echo "Deploy"
  artifacts:
    paths:
    - "*.tar.gz"
    - "*.deb"
    - "*.zip"
    - "*.md5"
    name: "lins-$(cat VERSION)-build-artifacts"
  only:
  - tags


# Tests
tests:
  stage: build
  image: ubuntu:18.04
  script:
  - apt update
  - apt install -y curl build-essential git
  - curl https://nim-lang.org/choosenim/init.sh -sSf > init.sh
  - sh init.sh -y
  - export PATH=$HOME/.nimble/bin:$PATH
  - nimble refresh -y
  - nimble install yaml -y
  - nim tests
  only:
  - master
  - latest
